using System;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.InteropServices;

namespace ChatPacketGenerator;

public static class SourceConstants
{
    private const string GeneratedHeader = """
        // <auto-generated>
        //     Automatically generated by ChatPacketGenerator.
        //     Changes made to this file may be lost and may cause undesirable behaviour.
        // </auto-generated>
        """;

    public const string PacketGroupAttributeName = "ChatPacketGenerator.PacketGroupAttribute";
    public const string PacketIdAttributeName = "ChatPacketGenerator.PacketIdAttribute";

    public const string Attributes = $$"""
        {{GeneratedHeader}}

        using System;

        namespace ChatPacketGenerator;

        [AttributeUsage(AttributeTargets.Class)]
        public sealed class PacketGroupAttribute : Attribute { }

        [AttributeUsage(AttributeTargets.Class)]
        public sealed class PacketIdAttribute : Attribute
        {
            public int Id { get; }

            public PacketIdAttribute(int id) => Id = id;
        }
        """;

    public const string ParserUsings = """
        using System.Text;
        using System.Buffers;
        """;

    public const string TryReadTemplate = """
        public static bool TryRead(ref ReadOnlySequence<byte> buffer, [NotNullWhen(true)] out {0}? result)
        {
            result = default;
            var reader = new SequenceReader<byte>(buffer);
            {1}

            result = new {0}({2});
            return true;
        }
        """;

    public const string TryReadStringTemplate = """
        if (!reader.TryReadLittleEndian(out ushort __{0}_length)) return false;
        if (!reader.TryReadExact(__{0}_length, out var __{0}_sequence)) return false;
        var __{0} = Encoding.UTF8.GetString(__{0}_sequence);
        """;

    public const string TryReadIntegerTemplate = """
        if (!reader.TryReadLittleEndian(out {0} __{1})) return false;
        """;
}
